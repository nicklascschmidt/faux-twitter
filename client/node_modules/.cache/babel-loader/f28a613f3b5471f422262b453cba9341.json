{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/twitter-rebuild/src/components/InteractionIcon/InteractionIcon.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Repeat, Heart, MessageCircle } from 'react-feather';\nexport const getIconData = type => {\n  switch (type) {\n    case 'like':\n      return {\n        Icon: Heart,\n        color: 'var(--c-light-like-red)',\n        fill: 'var(--c-light-like-red)',\n        mutedColor: 'var(--c-light-like-red-muted)'\n      };\n\n    case 'retweet':\n      return {\n        Icon: Repeat,\n        color: 'var(--c-light-retweet-green)',\n        mutedColor: 'var(--c-light-retweet-green-muted)'\n      };\n\n    case 'reply':\n      return {\n        Icon: MessageCircle,\n        color: 'var(--c-light-reply-blue)',\n        mutedColor: 'var(--c-light-reply-blue-muted)'\n      };\n\n    default:\n      return null;\n  }\n};\n/**\n * Alts\n * - plain, no style, no hover\n * - plain, no style, hover color,     hover circle\n * - bold,  color,    no hover (same), hover circle\n */\n\nconst IconElement = ({\n  Icon,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Icon, { ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 45\n}, this);\n/**\n * @summary - Icon, defaults to grey, only colored if `color` is passed in\n */\n\n\n_c = IconElement;\nconst StyledIcon = styled(IconElement)`\n  color: ${props => props.color || 'var(--c-light-text-lt)'};\n`;\nexport default StyledIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconElement\");","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/twitter-rebuild/src/components/InteractionIcon/InteractionIcon.jsx"],"names":["React","styled","Repeat","Heart","MessageCircle","getIconData","type","Icon","color","fill","mutedColor","IconElement","props","StyledIcon"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,aAAxB,QAA6C,eAA7C;AAEA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,UAAQA,IAAR;AACE,SAAK,MAAL;AACE,aAAO;AACLC,QAAAA,IAAI,EAAEJ,KADD;AAELK,QAAAA,KAAK,EAAE,yBAFF;AAGLC,QAAAA,IAAI,EAAE,yBAHD;AAILC,QAAAA,UAAU,EAAE;AAJP,OAAP;;AAMF,SAAK,SAAL;AACE,aAAO;AACLH,QAAAA,IAAI,EAAEL,MADD;AAELM,QAAAA,KAAK,EAAE,8BAFF;AAGLE,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAK,OAAL;AACE,aAAO;AACLH,QAAAA,IAAI,EAAEH,aADD;AAELI,QAAAA,KAAK,EAAE,2BAFF;AAGLE,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF;AACE,aAAO,IAAP;AArBJ;AAuBD,CAxBM;AA0BP;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEJ,EAAAA,IAAF;AAAQ,KAAGK;AAAX,CAAD,kBAAwB,QAAC,IAAD,OAAUA;AAAV;AAAA;AAAA;AAAA;AAAA,QAA5C;AAEA;AACA;AACA;;;KAJMD,W;AAKN,MAAME,UAAU,GAAGZ,MAAM,CAACU,WAAD,CAAc;AACvC,WAAYC,KAAD,IAAWA,KAAK,CAACJ,KAAN,IAAe,wBAAyB;AAC9D,CAFA;AAIA,eAAeK,UAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Repeat, Heart, MessageCircle } from 'react-feather';\n\nexport const getIconData = (type) => {\n  switch (type) {\n    case 'like':\n      return {\n        Icon: Heart,\n        color: 'var(--c-light-like-red)',\n        fill: 'var(--c-light-like-red)',\n        mutedColor: 'var(--c-light-like-red-muted)',\n      };\n    case 'retweet':\n      return {\n        Icon: Repeat,\n        color: 'var(--c-light-retweet-green)',\n        mutedColor: 'var(--c-light-retweet-green-muted)',\n      };\n    case 'reply':\n      return {\n        Icon: MessageCircle,\n        color: 'var(--c-light-reply-blue)',\n        mutedColor: 'var(--c-light-reply-blue-muted)',\n      };\n    default:\n      return null;\n  }\n};\n\n/**\n * Alts\n * - plain, no style, no hover\n * - plain, no style, hover color,     hover circle\n * - bold,  color,    no hover (same), hover circle\n */\n\nconst IconElement = ({ Icon, ...props }) => <Icon {...props} />;\n\n/**\n * @summary - Icon, defaults to grey, only colored if `color` is passed in\n */\nconst StyledIcon = styled(IconElement)`\n  color: ${(props) => props.color || 'var(--c-light-text-lt)'};\n`;\n\nexport default StyledIcon;\n"]},"metadata":{},"sourceType":"module"}