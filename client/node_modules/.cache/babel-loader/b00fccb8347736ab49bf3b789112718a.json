{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/twitter-rebuild/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport './styles/general-style.css';\nimport GlobalStyle from './components/Style/GlobalStyle';\nimport { lightTheme, darkTheme } from './components/Style/Themes';\nimport { useDarkMode } from './hooks';\nimport ThemeToggler from './components/ThemeToggler/ThemeToggler';\nimport Main from './pages/Main/Main';\nconst AppContainer = styled.main`\n\n`;\n_c = AppContainer;\n\nfunction App() {\n  _s();\n\n  const [theme, toggleTheme, isComponentMounted] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n  if (!isComponentMounted) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themeMode,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ThemeToggler, {\n          toggleTheme: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"F7DUXDskJbd2hV6Fh4+82r5jmC0=\", false, function () {\n  return [useDarkMode];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/twitter-rebuild/client/src/App.tsx"],"names":["React","styled","ThemeProvider","GlobalStyle","lightTheme","darkTheme","useDarkMode","ThemeToggler","Main","AppContainer","main","App","theme","toggleTheme","isComponentMounted","themeMode"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,aAAjB,QAAsC,mBAAtC;AACA,OAAO,4BAAP;AAEA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,2BAAtC;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAGA,MAAMC,YAAY,GAAGR,MAAM,CAACS,IAAK;AACjC;AACA,CAFA;KAAMD,Y;;AAIN,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,WAAR,EAAqBC,kBAArB,IAA2CR,WAAW,EAA5D;AACA,QAAMS,SAAS,GAAIH,KAAK,KAAK,OAAV,GAAoBR,UAApB,GAAiCC,SAApD;AAEA,MAAI,CAACS,kBAAL,EAAyB,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACzB,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEC,SAAtB;AAAA,2BACE;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,WAAW,EAAEF;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhBQF,G;UAC0CL,W;;;MAD1CK,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport './styles/general-style.css';\n\nimport GlobalStyle from './components/Style/GlobalStyle';\nimport { lightTheme, darkTheme } from './components/Style/Themes';\nimport { useDarkMode } from './hooks';\nimport ThemeToggler from './components/ThemeToggler/ThemeToggler';\nimport Main from './pages/Main/Main';\n\n\nconst AppContainer = styled.main`\n\n`;\n\nfunction App() {\n  const [theme, toggleTheme, isComponentMounted] = useDarkMode();\n  const themeMode = (theme === 'light' ? lightTheme : darkTheme);\n\n  if (!isComponentMounted) return <div/>;\n  return (\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyle />\n        <AppContainer>\n          <ThemeToggler toggleTheme={toggleTheme} />\n          <Main />\n        </AppContainer>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}