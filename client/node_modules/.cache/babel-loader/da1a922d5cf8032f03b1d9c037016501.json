{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicklascschmidt/Code/Nicky/twitter-rebuild/client/src/components/ThemeToggler/ThemeToggler.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst Button = styled.button`\n  background: ${({\n  theme\n}) => theme.primary};\n  border: 2px solid ${({\n  theme\n}) => theme.primaryDk};\n  color: ${({\n  theme\n}) => theme.textPrimary};\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.8rem;\n  padding: 0.6rem;\n`;\n_c = Button;\n\nconst ThemeToggler = ({\n  toggleTheme\n}) => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: toggleTheme,\n    children: \"Switch Theme\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = ThemeToggler;\nexport default ThemeToggler;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"ThemeToggler\");","map":{"version":3,"sources":["/Users/nicklascschmidt/Code/Nicky/twitter-rebuild/client/src/components/ThemeToggler/ThemeToggler.tsx"],"names":["React","styled","Button","button","theme","primary","primaryDk","textPrimary","ThemeToggler","toggleTheme"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAOA,MAAMC,MAAM,GAAGD,MAAM,CAACE,MAAO;AAC7B,gBAAgB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAQ;AAC7C,sBAAsB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,SAAU;AACrD,WAAW,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,WAAY;AAC5C;AACA;AACA;AACA;AACA,CARA;KAAML,M;;AAUN,MAAMM,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AAChD,sBAAO,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMD,Y;AAIN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { ITheme } from '../Style/Themes';\n\ninterface IProps {\n  toggleTheme: any;\n}\n\nconst Button = styled.button`\n  background: ${({ theme }) => theme.primary};\n  border: 2px solid ${({ theme }) => theme.primaryDk};\n  color: ${({ theme }) => theme.textPrimary};\n  border-radius: 30px;\n  cursor: pointer;\n  font-size: 0.8rem;\n  padding: 0.6rem;\n`;\n\nconst ThemeToggler = ({ toggleTheme }: IProps) => {\n  return <Button onClick={toggleTheme}>Switch Theme</Button>;\n};\n\nexport default ThemeToggler;\n"]},"metadata":{},"sourceType":"module"}